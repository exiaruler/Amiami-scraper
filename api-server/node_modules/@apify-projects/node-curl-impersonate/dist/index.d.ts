import { CurlImpersonateOptions, CurlResponse } from './interfaces.js';
export declare class CurlImpersonate {
    private _url;
    options: CurlImpersonateOptions;
    validMethods: Array<string>;
    binary: string;
    fullBinary: string;
    debugLogger: (msg: string) => void;
    impersonatePresets: string[];
    constructor(url: string, options: CurlImpersonateOptions);
    set url(urlString: string);
    get url(): string;
    private checkIfPresetAndMerge;
    makeRequest(url?: string): Promise<CurlResponse>;
    validateOptions(options: CurlImpersonateOptions): boolean;
    private setupBodyArgument;
    private setProperBinary;
    private getRequest;
    private spawnAsync;
    private postRequest;
    private extractRequestData;
    private extractResponseHeaders;
    /**
     * Extracts the loaded URL from the verbose output.
     */
    private extractResponseUrl;
    private convertHeaderObjectToCURL;
}
export default CurlImpersonate;
//# sourceMappingURL=index.d.ts.map